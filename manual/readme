Name
    myshell

Usage
    myshell [batchfile]

Description
    myshell is a simple command line interpreter that performs the limited number of commands listed below.
    It accepts one main command per line as well as any required arguments, redirection files and background execution indicator.
    The structure of each input to myshell should be as follows:
        cmd [args...] [redirection] [background exectution]

Internal Commands
    cd [path]
        If path is supplied and exists, change the current directory to path.
        If path is not supplied print the current directory.

    clr
        Clear the screen.

    dir [path]
        If path is supplied print all contents of path in long form.
        If path is not supplied print all contents of current directory in long form.

    environ
        Print all environment variables, one per line.

    echo [args...]
        If args supplied print them to a new line, multiple whitespaces and tabs are truncated to one space.
        If args not supplied print a black line.

    help
        Print this user manual using the more command.

    pause
        Suspend operation of shell until enter is pressed.

    rename <source file> <destination file>
        Rename source file to destination file. If destination file exists prompt for overwrite.

    quit
        Exits the shell.
    
External Commands
    Any command not recognised as an internal command is assumed to be an external, executable file.
    After its existance is verified, it is executed with all supplied arguments through the use of the exec function.

Arguments
    Arguments are deliminated by spaces, tabs and newlines.

Environment Variables
    myshell inherits all environment variables from its parent process and sets the following custon variables:

    SHELL
        The full path to the myshell exectutable file

    MAN_PATH
        The full path to this readme file

    PARENT
        Each child process created by myshell contains a PARENT variable which corresponds to the SHELL variable above

I/O Redirection
    After the arguments for a command, a user can specify the redirection of input and output in the following ways:

    cmd [ARGS...] < inputfile
        myshell will set the input stream for cmd to inputfile.

    cmd [ARGS...] > outputfile
        myshell will set the output stream for cmd to outputfile, output file will be truncated.
    
    cmd [ARGS...] >> outputfile
        myshell will set the output stream for cmd to outputfile, output file will be appended to.
    
    A maximum of one output and one input file should be specified for each command.
    If multiple redirection symbols for the same stream are supplied, then the rightmost of these will be used
    and others treated as normal arguments.
    
Batch Mode
    If a user wishes to automate the use of myshell then a batchfile can be passed as an arguement at execution:

    myshell batchfile

    During batch mode, myshell will read each line of the batchfile as a line of input and exit once it reaches the end of the file.
    The prompt will not display during batch mode.

Background Execution
    Every command other than "quit" and "cd", which need to affect the main process, are executed on separate child processes.
    By default, the parent process waits for these child processes to finish exectuing before prompting for further input.
    If a user wishes myshell to perform a task in the background and immediately prompt for further input then they can include an "&" as the final argument of their input.
    An "&" given as an arguement in any position other than the last will be treated as a regular argument.



Name: David McGuigan
Student ID: 19425942

I hereby acknowledge the DCU Academic Integrity Policy

